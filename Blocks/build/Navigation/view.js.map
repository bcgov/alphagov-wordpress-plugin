{"version":3,"file":"Navigation/view.js","mappings":"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","sources":["webpack://mega-menu-nav/./src/Navigation/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const navBlocks = document.querySelectorAll('.dswp-block-navigation-is-mobile-overlay, .dswp-block-navigation-is-always-overlay');\n    \n    navBlocks.forEach(nav => {\n        const mobileNavIcon = nav.querySelector(\".dswp-nav-mobile-toggle-icon\");\n        const menuContainer = nav.querySelector(\".dswp-block-navigation__container\");\n        const isMobileMode = nav.classList.contains('dswp-block-navigation-is-mobile-overlay');\n        const isAlwaysMode = nav.classList.contains('dswp-block-navigation-is-always-overlay');\n        \n        function handleResize() {\n            if (!isMobileMode) return;\n            \n            const breakpoint = parseInt(getComputedStyle(nav).getPropertyValue('--mobile-breakpoint'));\n            const isMobileView = window.innerWidth <= (breakpoint || 768);\n            \n            if (isMobileView) {\n                mobileNavIcon.style.display = 'flex';\n                if (!menuContainer.classList.contains('is-menu-open')) {\n                    menuContainer.style.display = 'none';\n                }\n            } else {\n                mobileNavIcon.style.display = 'none';\n                menuContainer.style.display = 'flex';\n                menuContainer.classList.remove('is-menu-open');\n                resetMenuState();\n            }\n        }\n\n        function resetMenuState() {\n            const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n            const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n            const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n            const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n            if (mobileNavIconText) mobileNavIconText.innerText = \"Menu\";\n            if (mobileNavTopBar) mobileNavTopBar.classList.remove(\"dswp-nav-mobile-menu-top-bar-open\");\n            if (mobileNavMiddleBar) mobileNavMiddleBar.classList.remove(\"dswp-nav-mobile-menu-middle-bar-open\");\n            if (mobileNavBottomBar) mobileNavBottomBar.classList.remove(\"dswp-nav-mobile-menu-bottom-bar-open\");\n            \n            mobileNavIcon.setAttribute('aria-expanded', 'false');\n        }\n\n        // Set initial states\n        if (isAlwaysMode) {\n            mobileNavIcon.style.display = 'flex';\n            menuContainer.style.display = 'none';\n        } else if (isMobileMode) {\n            handleResize();\n        }\n\n        // Listen for window resize only in mobile mode\n        if (isMobileMode) {\n            window.addEventListener('resize', handleResize);\n        }\n\n        // Mobile menu toggle functionality\n        if (mobileNavIcon) {\n            mobileNavIcon.addEventListener(\"click\", function () {\n                const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n                const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n                const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n                const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n                // Toggle menu visibility\n                menuContainer.classList.toggle('is-menu-open');\n                const isOpen = menuContainer.classList.contains('is-menu-open');\n                \n                // Update ARIA state\n                mobileNavIcon.setAttribute('aria-expanded', isOpen.toString());\n                \n                // Toggle hamburger animation\n                mobileNavTopBar.classList.toggle(\"dswp-nav-mobile-menu-top-bar-open\");\n                mobileNavMiddleBar.classList.toggle(\"dswp-nav-mobile-menu-middle-bar-open\");\n                if (mobileNavBottomBar) {\n                    mobileNavBottomBar.classList.toggle(\"dswp-nav-mobile-menu-bottom-bar-open\");\n                }\n\n                // Update menu text\n                mobileNavIconText.innerText = isOpen ? \"Close menu\" : \"Menu\";\n                \n                // Show/hide menu\n                menuContainer.style.display = isOpen ? 'grid' : 'none';\n            });\n        }\n\n        // Close menu when clicking outside\n        document.addEventListener('click', function(event) {\n            if (isMobileMode || isAlwaysMode) {\n                const isClickInside = nav.contains(event.target);\n                \n                if (!isClickInside && menuContainer.classList.contains('is-menu-open')) {\n                    menuContainer.classList.remove('is-menu-open');\n                    menuContainer.style.display = 'none';\n                    resetMenuState();\n                }\n            }\n        });\n\n        // Handle escape key\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape' && menuContainer.classList.contains('is-menu-open')) {\n                menuContainer.classList.remove('is-menu-open');\n                menuContainer.style.display = 'none';\n                resetMenuState();\n            }\n        });\n\n        // Clean up event listeners on page unload\n        window.addEventListener('unload', function() {\n            if (isMobileMode) {\n                window.removeEventListener('resize', handleResize);\n            }\n        });\n\n        // Add submenu click handlers\n        const submenuLinks = nav.querySelectorAll('.wp-block-navigation-item__content');\n        \n        submenuLinks.forEach(link => {\n            link.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation(); // Stop the event from bubbling up to avoid triggering parent submenu toggles inadvertently.\n\n                const submenu = link.closest('.wp-block-navigation-submenu');\n                const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n\n                // Toggle the current submenu\n                submenu.classList.toggle('is-open');\n                if (submenuContainer) {\n                    submenuContainer.classList.toggle('is-open');\n                }\n\n                // Close other submenus at the same level\n                const siblings = submenu.parentElement.children;\n                Array.from(siblings).forEach(sibling => {\n                    if (sibling !== submenu && sibling.classList.contains('wp-block-navigation-submenu')) {\n                        sibling.classList.remove('is-open');\n                        const siblingSubmenuContainer = sibling.querySelector('.wp-block-navigation__submenu-container');\n                        if (siblingSubmenuContainer) {\n                            siblingSubmenuContainer.classList.remove('is-open');\n                        }\n                    }\n                });\n\n                // Close all nested submenus inside the current submenu if it is being closed\n                if (!submenu.classList.contains('is-open')) {\n                    const nestedSubmenus = submenu.querySelectorAll('.wp-block-navigation-submenu');\n                    nestedSubmenus.forEach(nestedSubmenu => {\n                        nestedSubmenu.classList.remove('is-open');\n                        const nestedContainer = nestedSubmenu.querySelector('.wp-block-navigation__submenu-container');\n                        if (nestedContainer) {\n                            nestedContainer.classList.remove('is-open');\n                        }\n                    });\n                }\n            });\n        });\n    });\n});"],"names":["document","addEventListener","navBlocks","querySelectorAll","forEach","nav","mobileNavIcon","querySelector","menuContainer","isMobileMode","classList","contains","isAlwaysMode","handleResize","breakpoint","parseInt","getComputedStyle","getPropertyValue","isMobileView","window","innerWidth","style","display","remove","resetMenuState","mobileNavIconText","mobileNavTopBar","mobileNavMiddleBar","mobileNavBottomBar","innerText","setAttribute","toggle","isOpen","toString","event","isClickInside","target","key","removeEventListener","submenuLinks","link","e","preventDefault","stopPropagation","submenu","closest","submenuContainer","siblings","parentElement","children","Array","from","sibling","siblingSubmenuContainer","nestedSubmenus","nestedSubmenu","nestedContainer"],"sourceRoot":""}