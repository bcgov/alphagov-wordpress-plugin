{"version":3,"file":"Navigation/view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACtD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,6HAA6H,CAAC;EAE1KD,SAAS,CAACE,OAAO,CAACC,GAAG,IAAI;IACrB;IACA,MAAMC,QAAQ,GAAG;MACbC,aAAa,EAAEF,GAAG,CAACG,aAAa,CAAC,8BAA8B,CAAC;MAChEC,aAAa,EAAEJ,GAAG,CAACG,aAAa,CAAC,mCAAmC,CAAC;MACrEE,QAAQ,EAAEL,GAAG,CAACG,aAAa,CAAC,iCAAiC,CAAC;MAC9DG,MAAM,EAAEN,GAAG,CAACG,aAAa,CAAC,+BAA+B,CAAC;MAC1DI,SAAS,EAAEP,GAAG,CAACG,aAAa,CAAC,kCAAkC,CAAC;MAChEK,SAAS,EAAER,GAAG,CAACG,aAAa,CAAC,kCAAkC;IACnE,CAAC;IAED,MAAMM,YAAY,GAAGT,GAAG,CAACU,SAAS,CAACC,QAAQ,CAAC,yCAAyC,CAAC;IACtF,MAAMC,YAAY,GAAGZ,GAAG,CAACU,SAAS,CAACC,QAAQ,CAAC,yCAAyC,CAAC;;IAEtF;AACR;AACA;IACQ,SAASE,gBAAgBA,CAAA,EAAG;MACxB,MAAMC,YAAY,GAAGd,GAAG,CAACF,gBAAgB,CAAC,sCAAsC,CAAC;MACjFgB,YAAY,CAACf,OAAO,CAACgB,OAAO,IAAI;QAC5BA,OAAO,CAACL,SAAS,CAACM,MAAM,CAAC,SAAS,CAAC;QACnC,MAAMC,gBAAgB,GAAGF,OAAO,CAACZ,aAAa,CAAC,yCAAyC,CAAC;QACzF,MAAMe,aAAa,GAAGH,OAAO,CAACZ,aAAa,CAAC,sBAAsB,CAAC;QACnE,IAAIc,gBAAgB,EAAEA,gBAAgB,CAACP,SAAS,CAACM,MAAM,CAAC,SAAS,CAAC;QAClE,IAAIE,aAAa,EAAEA,aAAa,CAACC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;MAC3E,CAAC,CAAC;IACN;IAEA,SAASC,YAAYA,CAAA,EAAG;MACpB,IAAI,CAACX,YAAY,EAAE;MAEnB,MAAMY,UAAU,GAAGC,QAAQ,CAACtB,GAAG,CAACuB,OAAO,CAACC,oBAAoB,CAAC;MAC7D,MAAMC,YAAY,GAAGC,MAAM,CAACC,UAAU,KAAKN,UAAU,IAAI,GAAG,CAAC;MAC7D,MAAMO,aAAa,GAAG3B,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACC,QAAQ,CAAC,gBAAgB,CAAC;;MAEjF;MACA,MAAMkB,UAAU,GAAGC,eAAe,CAAC7B,QAAQ,CAACG,aAAa,CAAC;MAC1D2B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,UAAU,CAAC;MAClD5B,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACuB,MAAM,CAAC,aAAa,EAAEJ,UAAU,CAAC;;MAElE;MACA,IAAIJ,YAAY,KAAKG,aAAa,EAAE;QAChC;QACAf,gBAAgB,CAAC,CAAC;;QAElB;QACA,IAAI,CAACY,YAAY,EAAE;UACfxB,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACM,MAAM,CAAC,cAAc,CAAC;UACvDf,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAG,MAAM;UAC7CC,cAAc,CAAC,CAAC;QACpB;;QAEA;QACAnC,QAAQ,CAACC,aAAa,CAACgC,KAAK,CAACC,OAAO,GAAGV,YAAY,GAAG,MAAM,GAAG,MAAM;QACrExB,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACuB,MAAM,CAAC,gBAAgB,EAAER,YAAY,CAAC;QACvE,IAAIA,YAAY,IAAI,CAACxB,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;UAC5EV,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAG,MAAM;QACjD;MACJ;IACJ;IAEA,SAASC,cAAcA,CAAA,EAAG;MACtB,IAAInC,QAAQ,CAACI,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ,CAACgC,SAAS,GAAG,MAAM;MAC3D,IAAIpC,QAAQ,CAACK,MAAM,EAAEL,QAAQ,CAACK,MAAM,CAACI,SAAS,CAACM,MAAM,CAAC,mCAAmC,CAAC;MAC1F,IAAIf,QAAQ,CAACM,SAAS,EAAEN,QAAQ,CAACM,SAAS,CAACG,SAAS,CAACM,MAAM,CAAC,sCAAsC,CAAC;MACnG,IAAIf,QAAQ,CAACO,SAAS,EAAEP,QAAQ,CAACO,SAAS,CAACE,SAAS,CAACM,MAAM,CAAC,sCAAsC,CAAC;MAEnGf,QAAQ,CAACC,aAAa,CAACiB,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;IACjE;;IAEA;IACA,IAAIP,YAAY,IAAIZ,GAAG,CAACU,SAAS,CAACC,QAAQ,CAAC,sCAAsC,CAAC,EAAE;MAChFV,QAAQ,CAACC,aAAa,CAACgC,KAAK,CAACC,OAAO,GAAG,MAAM;MAC7ClC,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAG,MAAM;MAC7ClC,QAAQ,CAACG,aAAa,CAACM,SAAS,CAAC4B,GAAG,CAAC,gBAAgB,CAAC;IAC1D,CAAC,MAAM,IAAI7B,YAAY,EAAE;MACrBW,YAAY,CAAC,CAAC;IAClB;;IAEA;IACA,IAAIX,YAAY,EAAE;MACdiB,MAAM,CAAC9B,gBAAgB,CAAC,QAAQ,EAAEwB,YAAY,CAAC;IACnD;;IAEA;IACA,IAAInB,QAAQ,CAACC,aAAa,EAAE;MACxBD,QAAQ,CAACC,aAAa,CAACN,gBAAgB,CAAC,OAAO,EAAE,YAAY;QACzD;QACAK,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACuB,MAAM,CAAC,cAAc,CAAC;QACvD,MAAMM,MAAM,GAAGtC,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC;;QAExE;QACAV,QAAQ,CAACC,aAAa,CAACiB,YAAY,CAAC,eAAe,EAAEoB,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;;QAEvE;QACAvC,QAAQ,CAACK,MAAM,CAACI,SAAS,CAACuB,MAAM,CAAC,mCAAmC,CAAC;QACrEhC,QAAQ,CAACM,SAAS,CAACG,SAAS,CAACuB,MAAM,CAAC,sCAAsC,CAAC;QAC3E,IAAIhC,QAAQ,CAACO,SAAS,EAAE;UACpBP,QAAQ,CAACO,SAAS,CAACE,SAAS,CAACuB,MAAM,CAAC,sCAAsC,CAAC;QAC/E;;QAEA;QACAhC,QAAQ,CAACI,QAAQ,CAACgC,SAAS,GAAGE,MAAM,GAAG,YAAY,GAAG,MAAM;;QAE5D;QACAtC,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAGI,MAAM,GAAG,MAAM,GAAG,MAAM;;QAE/D;QACA,IAAI,CAACA,MAAM,EAAE;UACT1B,gBAAgB,CAAC,CAAC;QACtB;MACJ,CAAC,CAAC;IACN;;IAEA;IACAlB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAU6C,KAAK,EAAE;MAChD,MAAMC,aAAa,GAAG1C,GAAG,CAACW,QAAQ,CAAC8B,KAAK,CAACE,MAAM,CAAC;MAEhD,IAAI,CAACD,aAAa,EAAE;QAChB,IAAIzC,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;UAC3DV,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACM,MAAM,CAAC,cAAc,CAAC;UACvDf,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAG,MAAM;UAC7CC,cAAc,CAAC,CAAC;QACpB;;QAEA;QACAvB,gBAAgB,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC;;IAEF;IACAlB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAAU6C,KAAK,EAAE;MAClD,IAAIA,KAAK,CAACG,GAAG,KAAK,QAAQ,IAAI3C,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QACrFV,QAAQ,CAACG,aAAa,CAACM,SAAS,CAACM,MAAM,CAAC,cAAc,CAAC;QACvDf,QAAQ,CAACG,aAAa,CAAC8B,KAAK,CAACC,OAAO,GAAG,MAAM;QAC7CC,cAAc,CAAC,CAAC;MACpB;IACJ,CAAC,CAAC;;IAEF;;IAEA;IACA,MAAMS,YAAY,GAAG7C,GAAG,CAACF,gBAAgB,CAAC,mEAAmE,CAAC;IAE9G+C,YAAY,CAAC9C,OAAO,CAAC+C,IAAI,IAAI;MACzB,MAAM/B,OAAO,GAAG+B,IAAI,CAACC,OAAO,CAAC,8BAA8B,CAAC;MAC5D,MAAMC,UAAU,GAAGjC,OAAO,EAAEZ,aAAa,CAAC,yCAAyC,CAAC;MAEpF,IAAI6C,UAAU,EAAE;QACZ;QACA,MAAMC,WAAW,GAAGtD,QAAQ,CAACuD,aAAa,CAAC,QAAQ,CAAC;QACpDD,WAAW,CAACE,SAAS,GAAG,qBAAqB;QAC7CF,WAAW,CAAC9B,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;QAClD8B,WAAW,CAAC9B,YAAY,CAAC,YAAY,EAAE,gBAAgB,CAAC;;QAExD;QACA2B,IAAI,CAACM,UAAU,CAACC,YAAY,CAACJ,WAAW,EAAEH,IAAI,CAACQ,WAAW,CAAC;;QAE3D;QACAL,WAAW,CAACrD,gBAAgB,CAAC,OAAO,EAAE2D,CAAC,IAAI;UACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;UAClBD,CAAC,CAACE,eAAe,CAAC,CAAC;UAEnB,MAAMxC,gBAAgB,GAAGF,OAAO,CAACZ,aAAa,CAAC,yCAAyC,CAAC;UACzF,MAAMoC,MAAM,GAAGxB,OAAO,CAACL,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC;;UAEpD;UACA,MAAM+C,eAAe,GAAG1D,GAAG,CAACF,gBAAgB,CAAC,sCAAsC,CAAC;UACpF,MAAM6D,WAAW,GAAG,EAAE;UACtB,IAAIC,MAAM,GAAG7C,OAAO;UACpB,OAAO6C,MAAM,EAAE;YACX,IAAIA,MAAM,CAAClD,SAAS,CAACC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;cAC1DgD,WAAW,CAACE,IAAI,CAACD,MAAM,CAAC;YAC5B;YACAA,MAAM,GAAGA,MAAM,CAACE,aAAa,CAACf,OAAO,CAAC,8BAA8B,CAAC;UACzE;UAEAW,eAAe,CAAC3D,OAAO,CAACgE,WAAW,IAAI;YACnC,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAACD,WAAW,CAAC,EAAE;cACpCA,WAAW,CAACrD,SAAS,CAACM,MAAM,CAAC,SAAS,CAAC;cACvC,MAAMiD,SAAS,GAAGF,WAAW,CAAC5D,aAAa,CAAC,yCAAyC,CAAC;cACtF,MAAM+D,MAAM,GAAGH,WAAW,CAAC5D,aAAa,CAAC,sBAAsB,CAAC;cAChE,IAAI8D,SAAS,EAAE;gBACXA,SAAS,CAACvD,SAAS,CAACM,MAAM,CAAC,SAAS,CAAC;cACzC;cACA,IAAIkD,MAAM,EAAE;gBACRA,MAAM,CAAC/C,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;cACjD;YACJ;UACJ,CAAC,CAAC;;UAEF;UACAJ,OAAO,CAACL,SAAS,CAACuB,MAAM,CAAC,SAAS,CAAC;UACnC,IAAIhB,gBAAgB,EAAE;YAClBA,gBAAgB,CAACP,SAAS,CAACuB,MAAM,CAAC,SAAS,CAAC;;YAE5C;YACA,MAAMkC,KAAK,GAAGC,eAAe,CAACrD,OAAO,CAAC;YACtC,IAAIoD,KAAK,IAAI,CAAC,EAAE;cACZE,qBAAqB,CAACtD,OAAO,CAAC;YAClC;YAEA,MAAMuD,cAAc,GAAG,IAAIC,cAAc,CAAC,MAAM;cAC5C,IAAIxD,OAAO,CAACL,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACvC0D,qBAAqB,CAACtD,OAAO,CAAC;cAClC;YACJ,CAAC,CAAC;YAEFuD,cAAc,CAACE,OAAO,CAACzD,OAAO,CAAC;YAC/BuD,cAAc,CAACE,OAAO,CAAC7E,QAAQ,CAAC8E,IAAI,CAAC;YAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;cAClB,IAAI,CAAC3D,OAAO,CAACL,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACxC2D,cAAc,CAACK,UAAU,CAAC,CAAC;gBAC3B5D,OAAO,CAAC6D,mBAAmB,CAAC,aAAa,EAAEF,OAAO,CAAC;cACvD;YACJ,CAAC;YAED3D,OAAO,CAACnB,gBAAgB,CAAC,aAAa,EAAE8E,OAAO,CAAC;UACpD;;UAEA;UACAzB,WAAW,CAAC9B,YAAY,CAAC,eAAe,EAAE,CAAC,CAACoB,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IACF;IACA7C,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAU6C,KAAK,EAAE;MAChD;MACA,MAAMoC,gBAAgB,GAAG7E,GAAG,CAACW,QAAQ,CAAC8B,KAAK,CAACE,MAAM,CAAC;MAEnD,IAAI,CAACkC,gBAAgB,EAAE;QACnB;QACAhE,gBAAgB,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC;;IAEF;IACAlB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAAU6C,KAAK,EAAE;MAClD,MAAMqC,aAAa,GAAGnF,QAAQ,CAACmF,aAAa;MAE5C,IAAIrC,KAAK,CAACG,GAAG,KAAK,QAAQ,EAAE;QACxB;QACA/B,gBAAgB,CAAC,CAAC;QAClB;QACAkE,mBAAmB,CAAC/E,GAAG,CAAC;MAC5B;;MAEA;MACA,IAAI8E,aAAa,CAACpE,SAAS,CAACC,QAAQ,CAAC,mCAAmC,CAAC,IACrEmE,aAAa,CAACpE,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;QAEzD,MAAMI,OAAO,GAAG+D,aAAa,CAAC/B,OAAO,CAAC,8BAA8B,CAAC;QACrE,MAAM9B,gBAAgB,GAAGF,OAAO,EAAEZ,aAAa,CAAC,yCAAyC,CAAC;QAE1F,QAAQsC,KAAK,CAACG,GAAG;UACb,KAAK,OAAO;UACZ,KAAK,GAAG;YACJ,IAAIkC,aAAa,CAACpE,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;cACzD8B,KAAK,CAACe,cAAc,CAAC,CAAC;cACtBsB,aAAa,CAACE,KAAK,CAAC,CAAC;YACzB;YACA;UAEJ,KAAK,QAAQ;YACT,IAAIjE,OAAO,EAAEL,SAAS,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;cACxC8B,KAAK,CAACe,cAAc,CAAC,CAAC;cACtB,MAAMyB,YAAY,GAAGlE,OAAO,CAACZ,aAAa,CAAC,sBAAsB,CAAC;cAClE8E,YAAY,EAAED,KAAK,CAAC,CAAC;cACrBC,YAAY,EAAEC,KAAK,CAAC,CAAC;YACzB;YACA;QACR;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,SAASb,qBAAqBA,CAACtD,OAAO,EAAE;EACpC,MAAME,gBAAgB,GAAGF,OAAO,CAACZ,aAAa,CAAC,yCAAyC,CAAC;EACzF,IAAI,CAACc,gBAAgB,EAAE;;EAEvB;EACA,MAAMkD,KAAK,GAAGC,eAAe,CAACrD,OAAO,CAAC;;EAEtC;EACA,IAAIoD,KAAK,KAAK,CAAC,EAAE;IACblD,gBAAgB,CAACiB,KAAK,CAACiD,IAAI,GAAG,IAAI;IAClClE,gBAAgB,CAACiB,KAAK,CAACkD,KAAK,GAAG,MAAM,CAAC,CAAC;EAC3C,CAAC,MAAM,IAAIjB,KAAK,IAAI,CAAC,EAAE;IACnBlD,gBAAgB,CAACiB,KAAK,CAACiD,IAAI,GAAG,MAAM;IACpClE,gBAAgB,CAACiB,KAAK,CAACkD,KAAK,GAAG,MAAM,CAAC,CAAC;EAC3C;;EAEA;EACA,MAAMC,IAAI,GAAGpE,gBAAgB,CAACqE,qBAAqB,CAAC,CAAC;EACrD,MAAMC,aAAa,GAAG7D,MAAM,CAACC,UAAU;;EAEvC;EACA,IAAIwC,KAAK,KAAK,CAAC,IAAIkB,IAAI,CAACD,KAAK,GAAGG,aAAa,EAAE;IAC3CtE,gBAAgB,CAACiB,KAAK,CAACiD,IAAI,GAAG,MAAM;IACpClE,gBAAgB,CAACiB,KAAK,CAACkD,KAAK,GAAG,IAAI,CAAC,CAAC;EACzC,CAAC,MAAM,IAAIjB,KAAK,IAAI,CAAC,IAAIkB,IAAI,CAACD,KAAK,GAAGG,aAAa,EAAE;IACjDtE,gBAAgB,CAACiB,KAAK,CAACiD,IAAI,GAAG,MAAM;IACpClE,gBAAgB,CAACiB,KAAK,CAACkD,KAAK,GAAG,MAAM,CAAC,CAAC;EAC3C;AACJ;;AAEA;AACA,SAAShB,eAAeA,CAACrD,OAAO,EAAE;EAC9B,IAAIoD,KAAK,GAAG,CAAC;EACb,IAAIP,MAAM,GAAG7C,OAAO,CAAC+C,aAAa;EAClC,OAAOF,MAAM,EAAE;IACX,IAAIA,MAAM,CAAClD,SAAS,CAACC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;MAC1DwD,KAAK,EAAE;IACX;IACAP,MAAM,GAAGA,MAAM,CAACE,aAAa;EACjC;EACA,OAAOK,KAAK;AAChB;AAEA,SAASY,mBAAmBA,CAAC/E,GAAG,EAAE;EAC9B,MAAMwF,SAAS,GAAGxF,GAAG,CAACF,gBAAgB,CAAC,sBAAsB,CAAC;EAC9D0F,SAAS,CAACzF,OAAO,CAAC0F,KAAK,IAAI;IACvBA,KAAK,CAACtE,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;EAChD,CAAC,CAAC;AACN;;AAEA;AACA,SAASW,eAAeA,CAACmC,SAAS,EAAE;EAChC,MAAMyB,KAAK,GAAGzB,SAAS,CAAC0B,QAAQ;EAChC,IAAID,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;;EAElC;EACA,MAAMC,YAAY,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACJ,qBAAqB,CAAC,CAAC,CAACQ,GAAG;;EAEzD;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;IACnC,MAAMC,UAAU,GAAGN,KAAK,CAACK,CAAC,CAAC,CAACT,qBAAqB,CAAC,CAAC,CAACQ,GAAG;IACvD,IAAIE,UAAU,GAAGH,YAAY,GAAG,CAAC,EAAE;MAAE;MACjC9D,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAC9B6D,YAAY;QACZI,cAAc,EAAED,UAAU;QAC1BE,OAAO,EAAER,KAAK,CAACK,CAAC;MACpB,CAAC,CAAC;MACF,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAChB,C","sources":["webpack://mega-menu-nav/./src/Navigation/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const navBlocks = document.querySelectorAll('.dswp-block-navigation-is-mobile-overlay, .dswp-block-navigation-is-always-overlay, .dswp-block-navigation-is-never-overlay');\n\n    navBlocks.forEach(nav => {\n        // Cache frequently used elements\n        const elements = {\n            mobileNavIcon: nav.querySelector(\".dswp-nav-mobile-toggle-icon\"),\n            menuContainer: nav.querySelector(\".dswp-block-navigation__container\"),\n            iconText: nav.querySelector(\".dswp-nav-mobile-menu-icon-text\"),\n            topBar: nav.querySelector(\".dswp-nav-mobile-menu-top-bar\"),\n            middleBar: nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\"),\n            bottomBar: nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\")\n        };\n\n        const isMobileMode = nav.classList.contains('dswp-block-navigation-is-mobile-overlay');\n        const isAlwaysMode = nav.classList.contains('dswp-block-navigation-is-always-overlay');\n\n        /**\n         * Closes all submenus within the navigation\n         */\n        function closeAllSubmenus() {\n            const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n            openSubmenus.forEach(submenu => {\n                submenu.classList.remove('is-open');\n                const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                const submenuButton = submenu.querySelector('.dswp-submenu-toggle');\n                if (submenuContainer) submenuContainer.classList.remove('is-open');\n                if (submenuButton) submenuButton.setAttribute('aria-expanded', 'false');\n            });\n        }\n\n        function handleResize() {\n            if (!isMobileMode) return;\n\n            const breakpoint = parseInt(nav.dataset.dswpMobileBreakpoint);\n            const isMobileView = window.innerWidth <= (breakpoint || 768);\n            const wasMobileView = elements.menuContainer.classList.contains('dswp-is-mobile');\n\n            // Check for wrapping\n            const isWrapping = checkIfWrapping(elements.menuContainer);\n            console.log('Navigation is wrapping:', isWrapping);\n            elements.menuContainer.classList.toggle('is-wrapping', isWrapping);\n\n            // Only run logic if we're actually switching between views\n            if (isMobileView !== wasMobileView) {\n                // Close all open submenus\n                closeAllSubmenus();\n\n                // Reset mobile menu state if switching from mobile to desktop\n                if (!isMobileView) {\n                    elements.menuContainer.classList.remove('is-menu-open');\n                    elements.menuContainer.style.display = 'flex';\n                    resetMenuState();\n                }\n\n                // Update mobile classes and display\n                elements.mobileNavIcon.style.display = isMobileView ? 'flex' : 'none';\n                elements.menuContainer.classList.toggle('dswp-is-mobile', isMobileView);\n                if (isMobileView && !elements.menuContainer.classList.contains('is-menu-open')) {\n                    elements.menuContainer.style.display = 'none';\n                }\n            }\n        }\n\n        function resetMenuState() {\n            if (elements.iconText) elements.iconText.innerText = \"Menu\";\n            if (elements.topBar) elements.topBar.classList.remove(\"dswp-nav-mobile-menu-top-bar-open\");\n            if (elements.middleBar) elements.middleBar.classList.remove(\"dswp-nav-mobile-menu-middle-bar-open\");\n            if (elements.bottomBar) elements.bottomBar.classList.remove(\"dswp-nav-mobile-menu-bottom-bar-open\");\n\n            elements.mobileNavIcon.setAttribute('aria-expanded', 'false');\n        }\n\n        // Set initial states\n        if (isAlwaysMode || nav.classList.contains('dswp-block-navigation-is-mobile-only')) {\n            elements.mobileNavIcon.style.display = 'flex';\n            elements.menuContainer.style.display = 'none';\n            elements.menuContainer.classList.add('dswp-is-mobile');\n        } else if (isMobileMode) {\n            handleResize();\n        }\n\n        // Listen for window resize only in mobile mode\n        if (isMobileMode) {\n            window.addEventListener('resize', handleResize);\n        }\n\n        // Mobile menu toggle functionality\n        if (elements.mobileNavIcon) {\n            elements.mobileNavIcon.addEventListener(\"click\", function () {\n                // Toggle menu visibility\n                elements.menuContainer.classList.toggle('is-menu-open');\n                const isOpen = elements.menuContainer.classList.contains('is-menu-open');\n\n                // Update ARIA state\n                elements.mobileNavIcon.setAttribute('aria-expanded', isOpen.toString());\n\n                // Toggle hamburger animation\n                elements.topBar.classList.toggle(\"dswp-nav-mobile-menu-top-bar-open\");\n                elements.middleBar.classList.toggle(\"dswp-nav-mobile-menu-middle-bar-open\");\n                if (elements.bottomBar) {\n                    elements.bottomBar.classList.toggle(\"dswp-nav-mobile-menu-bottom-bar-open\");\n                }\n\n                // Update menu text\n                elements.iconText.innerText = isOpen ? \"Close menu\" : \"Menu\";\n\n                // Show/hide menu\n                elements.menuContainer.style.display = isOpen ? 'grid' : 'none';\n\n                // Close all open submenus when closing the mobile menu\n                if (!isOpen) {\n                    closeAllSubmenus();\n                }\n            });\n        }\n\n        // Close menu when clicking outside\n        document.addEventListener('click', function (event) {\n            const isClickInside = nav.contains(event.target);\n\n            if (!isClickInside) {\n                if (elements.menuContainer.classList.contains('is-menu-open')) {\n                    elements.menuContainer.classList.remove('is-menu-open');\n                    elements.menuContainer.style.display = 'none';\n                    resetMenuState();\n                }\n\n                // Close all open submenus\n                closeAllSubmenus();\n            }\n        });\n\n        // Handle escape key for mobile menu\n        document.addEventListener('keydown', function (event) {\n            if (event.key === 'Escape' && elements.menuContainer.classList.contains('is-menu-open')) {\n                elements.menuContainer.classList.remove('is-menu-open');\n                elements.menuContainer.style.display = 'none';\n                resetMenuState();\n            }\n        });\n\n        // Add submenu click handlers\n\n        // Add submenu click handlers\n        const submenuLinks = nav.querySelectorAll('.wp-block-navigation-submenu > .wp-block-navigation-item__content');\n\n        submenuLinks.forEach(link => {\n            const submenu = link.closest('.wp-block-navigation-submenu');\n            const hasSubmenu = submenu?.querySelector('.wp-block-navigation__submenu-container');\n\n            if (hasSubmenu) {\n                // Create a button for the arrow\n                const arrowButton = document.createElement('button');\n                arrowButton.className = 'dswp-submenu-toggle';\n                arrowButton.setAttribute('aria-expanded', 'false');\n                arrowButton.setAttribute('aria-label', 'Toggle submenu');\n\n                // Insert the button after the link text\n                link.parentNode.insertBefore(arrowButton, link.nextSibling);\n\n                // Move click handler to the arrow button\n                arrowButton.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    const isOpen = submenu.classList.contains('is-open');\n\n                    // First, close all open submenus except the current submenu's ancestors\n                    const allOpenSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                    const currentPath = [];\n                    let parent = submenu;\n                    while (parent) {\n                        if (parent.classList.contains('wp-block-navigation-submenu')) {\n                            currentPath.push(parent);\n                        }\n                        parent = parent.parentElement.closest('.wp-block-navigation-submenu');\n                    }\n\n                    allOpenSubmenus.forEach(openSubmenu => {\n                        if (!currentPath.includes(openSubmenu)) {\n                            openSubmenu.classList.remove('is-open');\n                            const container = openSubmenu.querySelector('.wp-block-navigation__submenu-container');\n                            const button = openSubmenu.querySelector('.dswp-submenu-toggle');\n                            if (container) {\n                                container.classList.remove('is-open');\n                            }\n                            if (button) {\n                                button.setAttribute('aria-expanded', 'false');\n                            }\n                        }\n                    });\n\n                    // Toggle current submenu\n                    submenu.classList.toggle('is-open');\n                    if (submenuContainer) {\n                        submenuContainer.classList.toggle('is-open');\n\n                        // Add position adjustment for level 2 and level 2+ submenus\n                        const level = getSubmenuLevel(submenu);\n                        if (level >= 2) {\n                            adjustSubmenuPosition(submenu);\n                        }\n\n                        const resizeObserver = new ResizeObserver(() => {\n                            if (submenu.classList.contains('is-open')) {\n                                adjustSubmenuPosition(submenu);\n                            }\n                        });\n\n                        resizeObserver.observe(submenu);\n                        resizeObserver.observe(document.body);\n\n                        const cleanup = () => {\n                            if (!submenu.classList.contains('is-open')) {\n                                resizeObserver.disconnect();\n                                submenu.removeEventListener('classChange', cleanup);\n                            }\n                        };\n\n                        submenu.addEventListener('classChange', cleanup);\n                    }\n\n                    // Update ARIA state\n                    arrowButton.setAttribute('aria-expanded', (!isOpen).toString());\n                });\n            }\n        });\n        // Add this after the submenu click handlers\n        document.addEventListener('click', function (event) {\n            // Check if click is outside the navigation\n            const isClickInsideNav = nav.contains(event.target);\n\n            if (!isClickInsideNav) {\n                // Close all open submenus\n                closeAllSubmenus();\n            }\n        });\n\n        // Add keyboard navigation for submenus\n        document.addEventListener('keydown', function (event) {\n            const activeElement = document.activeElement;\n\n            if (event.key === 'Escape') {\n                // Close all open submenus\n                closeAllSubmenus();\n                // Reset all arrow rotations\n                resetArrowRotations(nav);\n            }\n\n            // Handle arrow keys for submenu navigation\n            if (activeElement.classList.contains('wp-block-navigation-item__content') ||\n                activeElement.classList.contains('dswp-submenu-toggle')) {\n\n                const submenu = activeElement.closest('.wp-block-navigation-submenu');\n                const submenuContainer = submenu?.querySelector('.wp-block-navigation__submenu-container');\n\n                switch (event.key) {\n                    case 'Enter':\n                    case ' ':\n                        if (activeElement.classList.contains('dswp-submenu-toggle')) {\n                            event.preventDefault();\n                            activeElement.click();\n                        }\n                        break;\n\n                    case 'Escape':\n                        if (submenu?.classList.contains('is-open')) {\n                            event.preventDefault();\n                            const toggleButton = submenu.querySelector('.dswp-submenu-toggle');\n                            toggleButton?.click();\n                            toggleButton?.focus();\n                        }\n                        break;\n                }\n            }\n        });\n    });\n});\n\nfunction adjustSubmenuPosition(submenu) {\n    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n    if (!submenuContainer) return;\n\n    // Get the level of the submenu\n    const level = getSubmenuLevel(submenu);\n\n    // Reset position first\n    if (level === 1) {\n        submenuContainer.style.left = '0%';\n        submenuContainer.style.right = 'auto'; // Set right to 0% for level 1\n    } else if (level >= 2) {\n        submenuContainer.style.left = '100%';\n        submenuContainer.style.right = 'auto'; // Default for level 2 and deeper\n    }\n\n    // Get updated position after reset\n    const rect = submenuContainer.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n\n    // Check if submenu extends beyond right edge\n    if (level === 1 && rect.right > viewportWidth) {\n        submenuContainer.style.left = 'auto';\n        submenuContainer.style.right = '0%'; // Adjust for level 1 if it overflows\n    } else if (level >= 2 && rect.right > viewportWidth) {\n        submenuContainer.style.left = 'auto';\n        submenuContainer.style.right = '100%'; // Adjust for level 2 or deeper\n    }\n}\n\n// Add this helper function\nfunction getSubmenuLevel(submenu) {\n    let level = 1;\n    let parent = submenu.parentElement;\n    while (parent) {\n        if (parent.classList.contains('wp-block-navigation-submenu')) {\n            level++;\n        }\n        parent = parent.parentElement;\n    }\n    return level;\n}\n\nfunction resetArrowRotations(nav) {\n    const allArrows = nav.querySelectorAll('.dswp-submenu-toggle');\n    allArrows.forEach(arrow => {\n        arrow.setAttribute('aria-expanded', 'false');\n    });\n}\n\n// Add this helper function\nfunction checkIfWrapping(container) {\n    const items = container.children;\n    if (items.length < 2) return false;\n\n    // Get the top position of the first item as reference\n    const firstItemTop = items[0].getBoundingClientRect().top;\n    \n    // Check if any subsequent item is on a different line\n    for (let i = 1; i < items.length; i++) {\n        const currentTop = items[i].getBoundingClientRect().top;\n        if (currentTop > firstItemTop + 1) { // Adding 1px tolerance\n            console.log('Wrapping detected:', {\n                firstItemTop,\n                currentItemTop: currentTop,\n                element: items[i]\n            });\n            return true;\n        }\n    }\n    return false;\n}"],"names":["document","addEventListener","navBlocks","querySelectorAll","forEach","nav","elements","mobileNavIcon","querySelector","menuContainer","iconText","topBar","middleBar","bottomBar","isMobileMode","classList","contains","isAlwaysMode","closeAllSubmenus","openSubmenus","submenu","remove","submenuContainer","submenuButton","setAttribute","handleResize","breakpoint","parseInt","dataset","dswpMobileBreakpoint","isMobileView","window","innerWidth","wasMobileView","isWrapping","checkIfWrapping","console","log","toggle","style","display","resetMenuState","innerText","add","isOpen","toString","event","isClickInside","target","key","submenuLinks","link","closest","hasSubmenu","arrowButton","createElement","className","parentNode","insertBefore","nextSibling","e","preventDefault","stopPropagation","allOpenSubmenus","currentPath","parent","push","parentElement","openSubmenu","includes","container","button","level","getSubmenuLevel","adjustSubmenuPosition","resizeObserver","ResizeObserver","observe","body","cleanup","disconnect","removeEventListener","isClickInsideNav","activeElement","resetArrowRotations","click","toggleButton","focus","left","right","rect","getBoundingClientRect","viewportWidth","allArrows","arrow","items","children","length","firstItemTop","top","i","currentTop","currentItemTop","element"],"sourceRoot":""}