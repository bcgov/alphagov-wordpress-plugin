{"version":3,"file":"Navigation/view.js","mappings":"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","sources":["webpack://mega-menu-nav/./src/Navigation/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const navBlocks = document.querySelectorAll('.dswp-block-navigation-is-mobile-overlay, .dswp-block-navigation-is-always-overlay');\n    \n    navBlocks.forEach(nav => {\n        const mobileNavIcon = nav.querySelector(\".dswp-nav-mobile-toggle-icon\");\n        const menuContainer = nav.querySelector(\".dswp-block-navigation__container\");\n        const isMobileMode = nav.classList.contains('dswp-block-navigation-is-mobile-overlay');\n        const isAlwaysMode = nav.classList.contains('dswp-block-navigation-is-always-overlay');\n        \n        function handleResize() {\n            if (!isMobileMode) return;\n            \n            const breakpoint = parseInt(getComputedStyle(nav).getPropertyValue('--mobile-breakpoint'));\n            const isMobileView = window.innerWidth <= (breakpoint || 768);\n            \n            if (isMobileView) {\n                mobileNavIcon.style.display = 'flex';\n                if (!menuContainer.classList.contains('is-menu-open')) {\n                    menuContainer.style.display = 'none';\n                }\n            } else {\n                mobileNavIcon.style.display = 'none';\n                menuContainer.style.display = 'flex';\n                menuContainer.classList.remove('is-menu-open');\n                resetMenuState();\n            }\n        }\n\n        function resetMenuState() {\n            const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n            const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n            const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n            const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n            if (mobileNavIconText) mobileNavIconText.innerText = \"Menu\";\n            if (mobileNavTopBar) mobileNavTopBar.classList.remove(\"dswp-nav-mobile-menu-top-bar-open\");\n            if (mobileNavMiddleBar) mobileNavMiddleBar.classList.remove(\"dswp-nav-mobile-menu-middle-bar-open\");\n            if (mobileNavBottomBar) mobileNavBottomBar.classList.remove(\"dswp-nav-mobile-menu-bottom-bar-open\");\n            \n            mobileNavIcon.setAttribute('aria-expanded', 'false');\n        }\n\n        // Set initial states\n        if (isAlwaysMode) {\n            mobileNavIcon.style.display = 'flex';\n            menuContainer.style.display = 'none';\n        } else if (isMobileMode) {\n            handleResize();\n        }\n\n        // Listen for window resize only in mobile mode\n        if (isMobileMode) {\n            window.addEventListener('resize', handleResize);\n        }\n\n        // Mobile menu toggle functionality\n        if (mobileNavIcon) {\n            mobileNavIcon.addEventListener(\"click\", function () {\n                const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n                const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n                const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n                const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n                // Toggle menu visibility\n                menuContainer.classList.toggle('is-menu-open');\n                const isOpen = menuContainer.classList.contains('is-menu-open');\n                \n                // Update ARIA state\n                mobileNavIcon.setAttribute('aria-expanded', isOpen.toString());\n                \n                // Toggle hamburger animation\n                mobileNavTopBar.classList.toggle(\"dswp-nav-mobile-menu-top-bar-open\");\n                mobileNavMiddleBar.classList.toggle(\"dswp-nav-mobile-menu-middle-bar-open\");\n                if (mobileNavBottomBar) {\n                    mobileNavBottomBar.classList.toggle(\"dswp-nav-mobile-menu-bottom-bar-open\");\n                }\n\n                // Update menu text\n                mobileNavIconText.innerText = isOpen ? \"Close menu\" : \"Menu\";\n                \n                // Show/hide menu\n                menuContainer.style.display = isOpen ? 'grid' : 'none';\n            });\n        }\n\n        // Close menu when clicking outside\n        document.addEventListener('click', function(event) {\n            const isClickInside = nav.contains(event.target);\n                \n                if (!isClickInside && menuContainer.classList.contains('is-menu-open')) {\n                    menuContainer.classList.remove('is-menu-open');\n                    menuContainer.style.display = 'none';\n                    resetMenuState();\n                }\n        });\n\n        // Handle escape key for mobile menu //! Need to add functionality for desktop as well\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape' && menuContainer.classList.contains('is-menu-open')) {\n                menuContainer.classList.remove('is-menu-open');\n                menuContainer.style.display = 'none';\n                resetMenuState();\n            }\n        });\n\n        // Add submenu click handlers\n        const submenuLinks = nav.querySelectorAll('.wp-block-navigation-submenu > .wp-block-navigation-item__content');\n        \n        submenuLinks.forEach(link => {\n            // Only create button if parent has submenu\n            const submenu = link.closest('.wp-block-navigation-submenu');\n            const hasSubmenu = submenu?.querySelector('.wp-block-navigation__submenu-container');\n            \n            if (hasSubmenu) {\n                // Create a button for the arrow\n                const arrowButton = document.createElement('button');\n                arrowButton.className = 'dswp-submenu-toggle';\n                arrowButton.setAttribute('aria-expanded', 'false');\n                arrowButton.setAttribute('aria-label', 'Toggle submenu');\n                \n                // Insert the button after the link text\n                link.parentNode.insertBefore(arrowButton, link.nextSibling);\n                \n                // Move click handler to the arrow button\n                arrowButton.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    \n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    const isOpen = submenu.classList.contains('is-open');\n                    \n                    // Toggle submenu\n                    submenu.classList.toggle('is-open');\n                    if (submenuContainer) {\n                        submenuContainer.classList.toggle('is-open');\n                    }\n                    \n                    // Update ARIA state\n                    arrowButton.setAttribute('aria-expanded', (!isOpen).toString());\n                    \n                    // Close other submenus\n                    const siblings = submenu.parentElement.children;\n                    Array.from(siblings).forEach(sibling => {\n                        if (sibling !== submenu && sibling.classList.contains('wp-block-navigation-submenu')) {\n                            sibling.classList.remove('is-open');\n                            const siblingSubmenuContainer = sibling.querySelector('.wp-block-navigation__submenu-container');\n                            const siblingButton = sibling.querySelector('.dswp-submenu-toggle');\n                            if (siblingSubmenuContainer) {\n                                siblingSubmenuContainer.classList.remove('is-open');\n                            }\n                            if (siblingButton) {\n                                siblingButton.setAttribute('aria-expanded', 'false');\n                            }\n                        }\n                    });\n                });\n            }\n        });\n\n        // Add this after the submenu click handlers\n        document.addEventListener('click', function(event) {\n            // Check if click is outside the navigation\n            const isClickInsideNav = nav.contains(event.target);\n            \n            if (!isClickInsideNav) {\n                // Close all open submenus\n                const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                openSubmenus.forEach(submenu => {\n                    submenu.classList.remove('is-open');\n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    if (submenuContainer) {\n                        submenuContainer.classList.remove('is-open');\n                    }\n                });\n            }\n        });\n\n        // Add keyboard navigation for submenus\n        document.addEventListener('keydown', function(event) {\n            const activeElement = document.activeElement;\n            \n            // Handle arrow keys for submenu navigation\n            if (activeElement.classList.contains('wp-block-navigation-item__content') || \n                activeElement.classList.contains('dswp-submenu-toggle')) {\n                \n                const submenu = activeElement.closest('.wp-block-navigation-submenu');\n                const submenuContainer = submenu?.querySelector('.wp-block-navigation__submenu-container');\n                \n                switch(event.key) {\n                    case 'Enter':\n                    case ' ':\n                        if (activeElement.classList.contains('dswp-submenu-toggle')) {\n                            event.preventDefault();\n                            activeElement.click();\n                        }\n                        break;\n                        \n                    case 'Escape':\n                        if (submenu?.classList.contains('is-open')) {\n                            event.preventDefault();\n                            const toggleButton = submenu.querySelector('.dswp-submenu-toggle');\n                            toggleButton?.click();\n                            toggleButton?.focus();\n                        }\n                        break;\n                }\n            }\n        });\n    });\n});"],"names":["document","addEventListener","navBlocks","querySelectorAll","forEach","nav","mobileNavIcon","querySelector","menuContainer","isMobileMode","classList","contains","isAlwaysMode","handleResize","breakpoint","parseInt","getComputedStyle","getPropertyValue","isMobileView","window","innerWidth","style","display","remove","resetMenuState","mobileNavIconText","mobileNavTopBar","mobileNavMiddleBar","mobileNavBottomBar","innerText","setAttribute","toggle","isOpen","toString","event","isClickInside","target","key","submenuLinks","link","submenu","closest","hasSubmenu","arrowButton","createElement","className","parentNode","insertBefore","nextSibling","e","preventDefault","stopPropagation","submenuContainer","siblings","parentElement","children","Array","from","sibling","siblingSubmenuContainer","siblingButton","isClickInsideNav","openSubmenus","activeElement","click","toggleButton","focus"],"sourceRoot":""}