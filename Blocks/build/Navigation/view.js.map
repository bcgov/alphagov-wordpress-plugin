{"version":3,"file":"Navigation/view.js","mappings":"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","sources":["webpack://mega-menu-nav/./src/Navigation/view.js"],"sourcesContent":["/**\n * Navigation Block Frontend JavaScript\n * \n * Handles the interactive functionality of the navigation block including:\n * - Mobile menu toggling\n * - Submenu handling\n * - Responsive behavior\n * - Keyboard navigation\n * - Position adjustments for nested menus\n * \n * @since 1.0.0\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    // Select all navigation blocks that can have overlay behavior\n    const navBlocks = document.querySelectorAll(\n        '.dswp-block-navigation-is-mobile-overlay, ' + \n        '.dswp-block-navigation-is-always-overlay, ' + \n        '.dswp-block-navigation-is-never-overlay'\n    );\n\n    navBlocks.forEach(nav => {\n        // Cache frequently used DOM elements\n        const elements = {\n            mobileNavIcon: nav.querySelector(\".dswp-nav-mobile-toggle-icon\"),\n            menuContainer: nav.querySelector(\".dswp-block-navigation__container\"),\n            iconText: nav.querySelector(\".dswp-nav-mobile-menu-icon-text\"),\n            topBar: nav.querySelector(\".dswp-nav-mobile-menu-top-bar\"),\n            middleBar: nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\"),\n            bottomBar: nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\")\n        };\n\n        // Initialize state flags\n        const isMobileMode = nav.classList.contains('dswp-block-navigation-is-mobile-overlay');\n        const isAlwaysMode = nav.classList.contains('dswp-block-navigation-is-always-overlay');\n\n        /**\n         * Menu State Management Functions\n         */\n\n        /**\n         * Closes all open submenus within the navigation\n         */\n        function closeAllSubmenus() {\n            const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n            openSubmenus.forEach(submenu => {\n                submenu.classList.remove('is-open');\n                const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                const submenuButton = submenu.querySelector('.dswp-submenu-toggle');\n                if (submenuContainer) submenuContainer.classList.remove('is-open');\n                if (submenuButton) submenuButton.setAttribute('aria-expanded', 'false');\n            });\n        }\n\n        /**\n         * Resets the mobile menu to its default state\n         */\n        function resetMenuState() {\n            if (elements.iconText) elements.iconText.innerText = \"Menu\";\n            if (elements.topBar) elements.topBar.classList.remove(\"dswp-nav-mobile-menu-top-bar-open\");\n            if (elements.middleBar) elements.middleBar.classList.remove(\"dswp-nav-mobile-menu-middle-bar-open\");\n            if (elements.bottomBar) elements.bottomBar.classList.remove(\"dswp-nav-mobile-menu-bottom-bar-open\");\n            elements.mobileNavIcon.setAttribute('aria-expanded', 'false');\n        }\n\n        /**\n         * Resets all submenu arrow rotations to their default state\n         * @param {HTMLElement} nav - The navigation container element\n         */\n        function resetArrowRotations(nav) {\n            const allArrows = nav.querySelectorAll('.dswp-submenu-toggle');\n            allArrows.forEach(arrow => {\n                arrow.setAttribute('aria-expanded', 'false');\n            });\n        }\n\n        /**\n         * Event Handlers\n         */\n\n        /**\n         * Handles responsive behavior when window is resized\n         */\n        function handleResize() {\n            if (!isMobileMode) return;\n\n            const breakpoint = parseInt(nav.dataset.dswpMobileBreakpoint);\n            const isMobileView = window.innerWidth <= (breakpoint || 768);\n            const wasMobileView = elements.menuContainer.classList.contains('dswp-is-mobile');\n\n            // Only run logic if we're actually switching between views\n            if (isMobileView !== wasMobileView) {\n                closeAllSubmenus();\n\n                // Reset mobile menu state if switching from mobile to desktop\n                if (!isMobileView) {\n                    elements.menuContainer.classList.remove('is-menu-open');\n                    elements.menuContainer.style.display = 'flex';\n                    resetMenuState();\n                }\n\n                // Update mobile classes and display\n                elements.mobileNavIcon.style.display = isMobileView ? 'flex' : 'none';\n                elements.menuContainer.classList.toggle('dswp-is-mobile', isMobileView);\n                if (isMobileView && !elements.menuContainer.classList.contains('is-menu-open')) {\n                    elements.menuContainer.style.display = 'none';\n                }\n            }\n        }\n\n        /**\n         * Position & Layout Functions\n         */\n\n        /**\n         * Adjusts the position of submenus to ensure they remain visible within viewport\n         * @param {HTMLElement} submenu - The submenu element to position\n         */\n        function adjustSubmenuPosition(submenu) {\n            const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n            if (!submenuContainer) return;\n\n            const level = getSubmenuLevel(submenu);\n\n            // Reset position first\n            if (level === 1) {\n                submenuContainer.style.left = '0%';\n                submenuContainer.style.right = 'auto';\n            } else if (level >= 2) {\n                submenuContainer.style.left = '100%';\n                submenuContainer.style.right = 'auto';\n            }\n\n            // Check viewport boundaries\n            const rect = submenuContainer.getBoundingClientRect();\n            const viewportWidth = window.innerWidth;\n\n            if (level === 1 && rect.right > viewportWidth) {\n                submenuContainer.style.left = 'auto';\n                submenuContainer.style.right = '0%';\n            } else if (level >= 2 && rect.right > viewportWidth) {\n                submenuContainer.style.left = 'auto';\n                submenuContainer.style.right = '100%';\n            }\n        }\n\n        /**\n         * Determines the nesting level of a submenu\n         * @param {HTMLElement} submenu - The submenu element to check\n         * @returns {number} The nesting level (1-based)\n         */\n        function getSubmenuLevel(submenu) {\n            let level = 1;\n            let parent = submenu.parentElement;\n            while (parent) {\n                if (parent.classList.contains('wp-block-navigation-submenu')) {\n                    level++;\n                }\n                parent = parent.parentElement;\n            }\n            return level;\n        }\n\n        /**\n         * Initialization\n         */\n\n        // Set initial states\n        if (isAlwaysMode || nav.classList.contains('dswp-block-navigation-is-mobile-only')) {\n            elements.mobileNavIcon.style.display = 'flex';\n            elements.menuContainer.style.display = 'none';\n            elements.menuContainer.classList.add('dswp-is-mobile');\n        } else if (isMobileMode) {\n            handleResize();\n        }\n\n        // Event Listeners\n        if (isMobileMode) {\n            window.addEventListener('resize', handleResize);\n        }\n\n        // Mobile menu toggle functionality\n        if (elements.mobileNavIcon) {\n            elements.mobileNavIcon.addEventListener(\"click\", function () {\n                elements.menuContainer.classList.toggle('is-menu-open');\n                const isOpen = elements.menuContainer.classList.contains('is-menu-open');\n\n                elements.mobileNavIcon.setAttribute('aria-expanded', isOpen.toString());\n\n                // Toggle hamburger animation\n                elements.topBar.classList.toggle(\"dswp-nav-mobile-menu-top-bar-open\");\n                elements.middleBar.classList.toggle(\"dswp-nav-mobile-menu-middle-bar-open\");\n                if (elements.bottomBar) {\n                    elements.bottomBar.classList.toggle(\"dswp-nav-mobile-menu-bottom-bar-open\");\n                }\n\n                elements.iconText.innerText = isOpen ? \"Close menu\" : \"Menu\";\n                elements.menuContainer.style.display = isOpen ? 'grid' : 'none';\n\n                if (!isOpen) {\n                    closeAllSubmenus();\n                }\n            });\n        }\n\n        // Close menu when clicking outside\n        document.addEventListener('click', function (event) {\n            const isClickInside = nav.contains(event.target);\n            const isMobileView = window.innerWidth <= (parseInt(nav.dataset.dswpMobileBreakpoint) || 768);\n            \n            // Close submenus if click is outside and we're in desktop mode\n            if (!isClickInside) {\n                if (isMobileView && elements.menuContainer.classList.contains('is-menu-open')) {\n                    // Mobile mode - close everything\n                    elements.menuContainer.classList.remove('is-menu-open');\n                    elements.menuContainer.style.display = 'none';\n                    resetMenuState();\n                    closeAllSubmenus();\n                } else if (!isMobileView) {\n                    // Desktop mode - only close submenus\n                    closeAllSubmenus();\n                    resetArrowRotations(nav);\n                }\n            }\n        });\n\n        // Handle escape key\n        document.addEventListener('keydown', function (event) {\n            if (event.key === 'Escape') {\n                if (elements.menuContainer.classList.contains('is-menu-open')) {\n                    elements.menuContainer.classList.remove('is-menu-open');\n                    elements.menuContainer.style.display = 'none';\n                    resetMenuState();\n                }\n                closeAllSubmenus();\n                resetArrowRotations(nav);\n            }\n        });\n\n        // Initialize submenu functionality\n        const submenuLinks = nav.querySelectorAll('.wp-block-navigation-submenu > .wp-block-navigation-item__content');\n        submenuLinks.forEach(link => {\n            const submenu = link.closest('.wp-block-navigation-submenu');\n            const hasSubmenu = submenu?.querySelector('.wp-block-navigation__submenu-container');\n\n            if (hasSubmenu) {\n                // Create submenu toggle button\n                const arrowButton = document.createElement('button');\n                arrowButton.className = 'dswp-submenu-toggle';\n                arrowButton.setAttribute('aria-expanded', 'false');\n                arrowButton.setAttribute('aria-label', 'Toggle submenu');\n                link.parentNode.insertBefore(arrowButton, link.nextSibling);\n\n                // Handle submenu toggle\n                arrowButton.addEventListener('click', e => {\n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    const isOpen = submenu.classList.contains('is-open');\n\n                    // Close other submenus\n                    const currentPath = [];\n                    let parent = submenu;\n                    while (parent) {\n                        if (parent.classList.contains('wp-block-navigation-submenu')) {\n                            currentPath.push(parent);\n                        }\n                        parent = parent.parentElement.closest('.wp-block-navigation-submenu');\n                    }\n\n                    nav.querySelectorAll('.wp-block-navigation-submenu.is-open').forEach(openSubmenu => {\n                        if (!currentPath.includes(openSubmenu)) {\n                            openSubmenu.classList.remove('is-open');\n                            const container = openSubmenu.querySelector('.wp-block-navigation__submenu-container');\n                            const button = openSubmenu.querySelector('.dswp-submenu-toggle');\n                            if (container) container.classList.remove('is-open');\n                            if (button) button.setAttribute('aria-expanded', 'false');\n                        }\n                    });\n\n                    // Toggle current submenu\n                    submenu.classList.toggle('is-open');\n                    if (submenuContainer) {\n                        submenuContainer.classList.toggle('is-open');\n\n                        const level = getSubmenuLevel(submenu);\n                        if (level >= 2) {\n                            adjustSubmenuPosition(submenu);\n                        }  \n\n                        // Watch for size changes\n                        const resizeObserver = new ResizeObserver(() => {\n                            if (submenu.classList.contains('is-open')) {\n                                adjustSubmenuPosition(submenu);\n                            }\n                        });\n\n                        resizeObserver.observe(submenu);\n                        resizeObserver.observe(document.body);\n\n                        const cleanup = () => {\n                            if (!submenu.classList.contains('is-open')) {\n                                resizeObserver.disconnect();\n                                submenu.removeEventListener('classChange', cleanup);\n                            }\n                        };\n\n                        submenu.addEventListener('classChange', cleanup);\n                    }\n\n                    arrowButton.setAttribute('aria-expanded', (!isOpen).toString());\n                });\n            }\n        });\n    });\n});\n"],"names":["document","addEventListener","navBlocks","querySelectorAll","forEach","nav","elements","mobileNavIcon","querySelector","menuContainer","iconText","topBar","middleBar","bottomBar","isMobileMode","classList","contains","isAlwaysMode","closeAllSubmenus","openSubmenus","submenu","remove","submenuContainer","submenuButton","setAttribute","resetMenuState","innerText","resetArrowRotations","allArrows","arrow","handleResize","breakpoint","parseInt","dataset","dswpMobileBreakpoint","isMobileView","window","innerWidth","wasMobileView","style","display","toggle","adjustSubmenuPosition","level","getSubmenuLevel","left","right","rect","getBoundingClientRect","viewportWidth","parent","parentElement","add","isOpen","toString","event","isClickInside","target","key","submenuLinks","link","closest","hasSubmenu","arrowButton","createElement","className","parentNode","insertBefore","nextSibling","e","currentPath","push","openSubmenu","includes","container","button","resizeObserver","ResizeObserver","observe","body","cleanup","disconnect","removeEventListener"],"sourceRoot":""}