{"version":3,"file":"Navigation/view.js","mappings":"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","sources":["webpack://mega-menu-nav/./src/Navigation/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const navBlocks = document.querySelectorAll('.dswp-block-navigation-is-mobile-overlay, .dswp-block-navigation-is-always-overlay');\n    \n    navBlocks.forEach(nav => {\n        const mobileNavIcon = nav.querySelector(\".dswp-nav-mobile-toggle-icon\");\n        const menuContainer = nav.querySelector(\".dswp-block-navigation__container\");\n        const isMobileMode = nav.classList.contains('dswp-block-navigation-is-mobile-overlay');\n        const isAlwaysMode = nav.classList.contains('dswp-block-navigation-is-always-overlay');\n        \n        function handleResize() {\n            if (!isMobileMode) return;\n            \n            const breakpoint = parseInt(getComputedStyle(nav).getPropertyValue('--mobile-breakpoint'));\n            const isMobileView = window.innerWidth <= (breakpoint || 768);\n            const wasMobileView = mobileNavIcon.style.display === 'flex';\n            \n            // If we're switching between mobile and desktop views\n            if (isMobileView !== wasMobileView) {\n                // Close all open submenus\n                const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                openSubmenus.forEach(submenu => {\n                    submenu.classList.remove('is-open');\n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    const submenuButton = submenu.querySelector('.dswp-submenu-toggle');\n                    if (submenuContainer) {\n                        submenuContainer.classList.remove('is-open');\n                    }\n                    if (submenuButton) {\n                        submenuButton.setAttribute('aria-expanded', 'false');\n                    }\n                });\n\n                if (isMobileView) {\n                    mobileNavIcon.style.display = 'flex';\n                    if (!menuContainer.classList.contains('is-menu-open')) {\n                        menuContainer.style.display = 'none';\n                    }\n                } else {\n                    mobileNavIcon.style.display = 'none';\n                    menuContainer.style.display = 'flex';\n                    menuContainer.classList.remove('is-menu-open');\n                    resetMenuState();\n                }\n            }\n        }\n\n        function resetMenuState() {\n            const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n            const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n            const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n            const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n            if (mobileNavIconText) mobileNavIconText.innerText = \"Menu\";\n            if (mobileNavTopBar) mobileNavTopBar.classList.remove(\"dswp-nav-mobile-menu-top-bar-open\");\n            if (mobileNavMiddleBar) mobileNavMiddleBar.classList.remove(\"dswp-nav-mobile-menu-middle-bar-open\");\n            if (mobileNavBottomBar) mobileNavBottomBar.classList.remove(\"dswp-nav-mobile-menu-bottom-bar-open\");\n            \n            mobileNavIcon.setAttribute('aria-expanded', 'false');\n        }\n\n        // Set initial states\n        if (isAlwaysMode) {\n            mobileNavIcon.style.display = 'flex';\n            menuContainer.style.display = 'none';\n        } else if (isMobileMode) {\n            handleResize();\n        }\n\n        // Listen for window resize only in mobile mode\n        if (isMobileMode) {\n            window.addEventListener('resize', handleResize);\n        }\n\n        // Mobile menu toggle functionality\n        if (mobileNavIcon) {\n            mobileNavIcon.addEventListener(\"click\", function () {\n                const mobileNavIconText = nav.querySelector(\".dswp-nav-mobile-menu-icon-text\");\n                const mobileNavTopBar = nav.querySelector(\".dswp-nav-mobile-menu-top-bar\");\n                const mobileNavMiddleBar = nav.querySelector(\".dswp-nav-mobile-menu-middle-bar\");\n                const mobileNavBottomBar = nav.querySelector(\".dswp-nav-mobile-menu-bottom-bar\");\n\n                // Toggle menu visibility\n                menuContainer.classList.toggle('is-menu-open');\n                const isOpen = menuContainer.classList.contains('is-menu-open');\n                \n                // Update ARIA state\n                mobileNavIcon.setAttribute('aria-expanded', isOpen.toString());\n                \n                // Toggle hamburger animation\n                mobileNavTopBar.classList.toggle(\"dswp-nav-mobile-menu-top-bar-open\");\n                mobileNavMiddleBar.classList.toggle(\"dswp-nav-mobile-menu-middle-bar-open\");\n                if (mobileNavBottomBar) {\n                    mobileNavBottomBar.classList.toggle(\"dswp-nav-mobile-menu-bottom-bar-open\");\n                }\n\n                // Update menu text\n                mobileNavIconText.innerText = isOpen ? \"Close menu\" : \"Menu\";\n                \n                // Show/hide menu\n                menuContainer.style.display = isOpen ? 'grid' : 'none';\n\n                // Close all open submenus when closing the mobile menu\n                if (!isOpen) {\n                    const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                    openSubmenus.forEach(submenu => {\n                        submenu.classList.remove('is-open');\n                        const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                        const submenuButton = submenu.querySelector('.dswp-submenu-toggle');\n                        if (submenuContainer) {\n                            submenuContainer.classList.remove('is-open');\n                        }\n                        if (submenuButton) {\n                            submenuButton.setAttribute('aria-expanded', 'false');\n                        }\n                    });\n                }\n            });\n        }\n\n        // Close menu when clicking outside\n        document.addEventListener('click', function(event) {\n            const isClickInside = nav.contains(event.target);\n                \n                if (!isClickInside && menuContainer.classList.contains('is-menu-open')) {\n                    menuContainer.classList.remove('is-menu-open');\n                    menuContainer.style.display = 'none';\n                    resetMenuState();\n                }\n        });\n\n        // Handle escape key for mobile menu //! Need to add functionality for desktop as well\n        document.addEventListener('keydown', function(event) {\n            if (event.key === 'Escape' && menuContainer.classList.contains('is-menu-open')) {\n                menuContainer.classList.remove('is-menu-open');\n                menuContainer.style.display = 'none';\n                resetMenuState();\n            }\n        });\n\n        // Add submenu click handlers\n        const submenuLinks = nav.querySelectorAll('.wp-block-navigation-submenu > .wp-block-navigation-item__content');\n        \n        submenuLinks.forEach(link => {\n            // Only create button if parent has submenu\n            const submenu = link.closest('.wp-block-navigation-submenu');\n            const hasSubmenu = submenu?.querySelector('.wp-block-navigation__submenu-container');\n            \n            if (hasSubmenu) {\n                // Create a button for the arrow\n                const arrowButton = document.createElement('button');\n                arrowButton.className = 'dswp-submenu-toggle';\n                arrowButton.setAttribute('aria-expanded', 'false');\n                arrowButton.setAttribute('aria-label', 'Toggle submenu');\n                \n                // Insert the button after the link text\n                link.parentNode.insertBefore(arrowButton, link.nextSibling);\n                \n                // Move click handler to the arrow button\n                arrowButton.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    \n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    const isOpen = submenu.classList.contains('is-open');\n                    \n                    // First, close all open submenus except the current submenu's ancestors\n                    const allOpenSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                    const currentPath = [];\n                    let parent = submenu;\n                    while (parent) {\n                        if (parent.classList.contains('wp-block-navigation-submenu')) {\n                            currentPath.push(parent);\n                        }\n                        parent = parent.parentElement.closest('.wp-block-navigation-submenu');\n                    }\n\n                    allOpenSubmenus.forEach(openSubmenu => {\n                        if (!currentPath.includes(openSubmenu)) {\n                            openSubmenu.classList.remove('is-open');\n                            const container = openSubmenu.querySelector('.wp-block-navigation__submenu-container');\n                            const button = openSubmenu.querySelector('.dswp-submenu-toggle');\n                            if (container) {\n                                container.classList.remove('is-open');\n                            }\n                            if (button) {\n                                button.setAttribute('aria-expanded', 'false');\n                            }\n                        }\n                    });\n\n                    // Toggle current submenu\n                    submenu.classList.toggle('is-open');\n                    if (submenuContainer) {\n                        submenuContainer.classList.toggle('is-open');\n                        \n                        // Add position adjustment for level 3+ submenus\n                        const level = getSubmenuLevel(submenu);\n                        if (level >= 3) {\n                            adjustSubmenuPosition(submenu);\n                            \n                            const resizeObserver = new ResizeObserver(() => {\n                                if (submenu.classList.contains('is-open')) {\n                                    adjustSubmenuPosition(submenu);\n                                }\n                            });\n                            \n                            resizeObserver.observe(submenu);\n                            resizeObserver.observe(document.body);\n                            \n                            const cleanup = () => {\n                                if (!submenu.classList.contains('is-open')) {\n                                    resizeObserver.disconnect();\n                                    submenu.removeEventListener('classChange', cleanup);\n                                }\n                            };\n                            \n                            submenu.addEventListener('classChange', cleanup);\n                        }\n                    }\n                    \n                    // Update ARIA state\n                    arrowButton.setAttribute('aria-expanded', (!isOpen).toString());\n                });\n            }\n        });\n\n        // Add this after the submenu click handlers\n        document.addEventListener('click', function(event) {\n            // Check if click is outside the navigation\n            const isClickInsideNav = nav.contains(event.target);\n            \n            if (!isClickInsideNav) {\n                // Close all open submenus\n                const openSubmenus = nav.querySelectorAll('.wp-block-navigation-submenu.is-open');\n                openSubmenus.forEach(submenu => {\n                    submenu.classList.remove('is-open');\n                    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n                    if (submenuContainer) {\n                        submenuContainer.classList.remove('is-open');\n                    }\n                });\n            }\n        });\n\n        // Add keyboard navigation for submenus\n        document.addEventListener('keydown', function(event) {\n            const activeElement = document.activeElement;\n            \n            // Handle arrow keys for submenu navigation\n            if (activeElement.classList.contains('wp-block-navigation-item__content') || \n                activeElement.classList.contains('dswp-submenu-toggle')) {\n                \n                const submenu = activeElement.closest('.wp-block-navigation-submenu');\n                const submenuContainer = submenu?.querySelector('.wp-block-navigation__submenu-container');\n                \n                switch(event.key) {\n                    case 'Enter':\n                    case ' ':\n                        if (activeElement.classList.contains('dswp-submenu-toggle')) {\n                            event.preventDefault();\n                            activeElement.click();\n                        }\n                        break;\n                        \n                    case 'Escape':\n                        if (submenu?.classList.contains('is-open')) {\n                            event.preventDefault();\n                            const toggleButton = submenu.querySelector('.dswp-submenu-toggle');\n                            toggleButton?.click();\n                            toggleButton?.focus();\n                        }\n                        break;\n                }\n            }\n        });\n    });\n});\n\nfunction adjustSubmenuPosition(submenu) {\n    const submenuContainer = submenu.querySelector('.wp-block-navigation__submenu-container');\n    if (!submenuContainer) return;\n\n    // Reset position first\n    submenuContainer.style.left = '100%';\n    submenuContainer.style.right = 'auto';\n\n    // Get updated position after reset\n    const rect = submenuContainer.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    \n    // Check if submenu extends beyond right edge\n    if (rect.right > viewportWidth) {\n        submenuContainer.style.left = 'auto';\n        submenuContainer.style.right = '100%';\n    }\n}\n\n// Add this helper function\nfunction getSubmenuLevel(submenu) {\n  let level = 1;\n  let parent = submenu.parentElement;\n  while (parent) {\n    if (parent.classList.contains('wp-block-navigation-submenu')) {\n      level++;\n    }\n    parent = parent.parentElement;\n  }\n  return level;\n}"],"names":["document","addEventListener","navBlocks","querySelectorAll","forEach","nav","mobileNavIcon","querySelector","menuContainer","isMobileMode","classList","contains","isAlwaysMode","handleResize","breakpoint","parseInt","getComputedStyle","getPropertyValue","isMobileView","window","innerWidth","wasMobileView","style","display","openSubmenus","submenu","remove","submenuContainer","submenuButton","setAttribute","resetMenuState","mobileNavIconText","mobileNavTopBar","mobileNavMiddleBar","mobileNavBottomBar","innerText","toggle","isOpen","toString","event","isClickInside","target","key","submenuLinks","link","closest","hasSubmenu","arrowButton","createElement","className","parentNode","insertBefore","nextSibling","e","preventDefault","stopPropagation","allOpenSubmenus","currentPath","parent","push","parentElement","openSubmenu","includes","container","button","level","getSubmenuLevel","adjustSubmenuPosition","resizeObserver","ResizeObserver","observe","body","cleanup","disconnect","removeEventListener","isClickInsideNav","activeElement","click","toggleButton","focus","left","right","rect","getBoundingClientRect","viewportWidth"],"sourceRoot":""}